// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var e,t=Object.defineProperty,a=Object.prototype,n=a.toString,o=a.__defineGetter__,i=a.__defineSetter__,u=a.__lookupGetter__,l=a.__lookupSetter__;function f(r,e,t,a){var n,o,i,u,l,f,c,_,p;if(r<=0)return NaN;if(1===r||0===a)return(c=t[0])==c&&r-e>0?0:NaN;for(o=a<0?(1-r)*a:0,p=0;p<r;p++){if((c=t[o])==c){n=c;break}o+=a}if(p===r)return NaN;for(o+=a,p+=1,i=0,l=0,_=1;p<r;p++)(c=t[o])==c&&(i+=(f=c-n)*f,l+=f,_+=1),o+=a;return(u=_-e)<=0?NaN:i/u-l/_*(l/u)}function c(r,e,t,a,n){var o,i,u,l,f,c,_,p,b;if(r<=0)return NaN;if(1===r||0===a)return(_=t[n])==_&&r-e>0?0:NaN;for(i=n,b=0;b<r;b++){if((_=t[i])==_){o=_;break}i+=a}if(b===r)return NaN;for(i+=a,b+=1,u=0,f=0,p=1;b<r;b++)(_=t[i])==_&&(u+=(c=_-o)*c,f+=c,p+=1),i+=a;return(l=p-e)<=0?NaN:u/l-f/p*(f/l)}e=function(){try{return r({},"x",{}),!0}catch(r){return!1}}()?t:function(r,e,t){var f,c,_,p;if("object"!=typeof r||null===r||"[object Array]"===n.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof t||null===t||"[object Array]"===n.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((c="value"in t)&&(u.call(r,e)||l.call(r,e)?(f=r.__proto__,r.__proto__=a,delete r[e],r[e]=t.value,r.__proto__=f):r[e]=t.value),_="get"in t,p="set"in t,c&&(_||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return _&&o&&o.call(r,e,t.get),p&&i&&i.call(r,e,t.set),r},e(f,"ndarray",{configurable:!1,enumerable:!1,writable:!1,value:c});export{f as default,c as ndarray};
//# sourceMappingURL=mod.js.map
